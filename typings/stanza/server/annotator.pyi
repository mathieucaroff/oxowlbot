"""
This type stub file was generated by pyright.
"""

from multiprocessing import Process
from six.moves.BaseHTTPServer import BaseHTTPRequestHandler

"""
Defines a base class that can be used to annotate.
"""
class Annotator(Process):
    """
    This annotator base class hosts a lightweight server that accepts
    annotation requests from CoreNLP.
    Each annotator simply defines 3 functions: requires, provides and annotate.

    This class takes care of defining appropriate endpoints to interface
    with CoreNLP.
    """
    @property
    def name(self):
        """
        Name of the annotator (used by CoreNLP)
        """
        ...
    
    @property
    def requires(self):
        """
        Requires has to specify all the annotations required before we
        are called.
        """
        ...
    
    @property
    def provides(self):
        """
        The set of annotations guaranteed to be provided when we are done.
        NOTE: that these annotations are either fully qualified Java
        class names or refer to nested classes of
        edu.stanford.nlp.ling.CoreAnnotations (as is the case below).
        """
        ...
    
    def annotate(self, ann):
        """
        @ann: is a protobuf annotation object.
        Actually populate @ann with tokens.
        """
        ...
    
    @property
    def properties(self):
        """
        Defines a Java property to define this anntoator to CoreNLP.
        """
        ...
    
    class _Handler(BaseHTTPRequestHandler):
        annotator = ...
        def __init__(self, request, client_address, server):
            ...
        
        def do_GET(self):
            """
            Handle a ping request
            """
            ...
        
        def do_POST(self):
            """
            Handle an annotate request
            """
            ...
        
    
    
    def __init__(self, host=..., port=...):
        """
        Launches a server endpoint to communicate with CoreNLP
        """
        ...
    
    def run(self):
        """
        Runs the server using Python's simple HTTPServer.
        TODO: make this multithreaded.
        """
        ...
    


