"""
This type stub file was generated by pyright.
"""

from owlready2.namespace import *
from owlready2.entity import *
from typing import Any, Optional

class _EquivalentToList(CallbackList):
  __slots__ = ...
  def __init__(self, l, obj, callback):
    ...
  
  def _build_indirect(self):
    ...
  
  def indirect(self):
    ...
  
  def self_and_indirect_equivalent(self):
    ...
  


class Thing(metaclass=ThingClass):
  namespace = ...
  def get_name(self):
    ...
  
  def set_name(self, name):
    ...
  
  name = ...
  def get_iri(self):
    ...
  
  def set_iri(self, new_iri):
    ...
  
  iri = ...
  def __new__(Class, name: Optional[Any] = ..., namespace: Optional[Any] = ..., **kargs):
    ...
  
  def __init__(self, name: Optional[Any] = ..., namespace: Optional[Any] = ..., **kargs):
    self.namespace = ...
  
  def generate_default_name(self):
    ...
  
  def _get_is_instance_of(self):
    ...
  
  def _set_is_instance_of(self, v):
    self.is_a = ...
  
  is_instance_of = ...
  def _instance_is_a_changed(self, old):
    ...
  
  def get_equivalent_to(self):
    ...
  
  def set_equivalent_to(self, value):
    ...
  
  def _instance_equivalent_to_changed(self, old):
    ...
  
  def differents(self):
    ...
  
  def __getattr__(self, attr):
    ...
  
  def __setattr__(self, attr, value):
    ...
  
  def _get_instance_possible_relations(self, ignore_domainless_properties: bool = ...):
    ...
  
  def get_properties(self):
    ...
  
  def INDIRECT_get_properties(self):
    ...
  
  def __dir__(self):
    ...
  
  def get_inverse_properties(self):
    ...
  


class Nothing(Thing):
  ...


class FusionClass(ThingClass):
  ontology = ...
  _CACHES = ...
  _FUSION_CLASSES = ...
  def __repr__(self):
    ...
  
  @staticmethod
  def _get_fusion_class(Classes0):
    ...
  
  @staticmethod
  def _create_fusion_class(key, Classes):
    ...
  


