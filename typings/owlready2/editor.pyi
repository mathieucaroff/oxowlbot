"""
This type stub file was generated by pyright.
"""

import editobj3.introsp as introsp
from owlready2 import *

IGNORE_DOMAINLESS_PROPERTY = False
def _keep_most_generic(s):
  ...

def _available_classes():
  ...

def _get_label(o):
  ...

descr = introsp.description(Thing)
def _get_priority(Prop):
  ...

def _intersect_reduce(s):
  ...

def _flattened_or(Classes):
  ...

def _flattened_or_iteration(Classes):
  ...

def _get_class_one_of(Class):
  ...

def _prop_use_children_group(Prop, domain):
  ...

def _has_object_property(Class):
  ...

def _is_abstract_class(Class):
  ...

def configure_editobj_from_ontology(onto):
  ...

def _configure_class_restriction(Class, restriction):
  ...

PROP_CHILDREN_GROUPS = {  }
def get_prop_children_group(Prop):
  ...

class PropChildrenGroup(object):
  def __init__(self, Prop):
    self.Prop = ...
    self.range_restrictions = ...
    self.changed = ...
  
  def define_children_groups(self):
    self.changed = ...
  


class RangeRestriction(object):
  def __init__(self, Prop, domain, ranges):
    self.domain = ...
    self.ranges = ...
  
  def __repr__(self):
    ...
  
  def get_classes(self):
    ...
  


class RangeClassOnly(RangeRestriction):
  ...


class RangeClassExclusion(RangeRestriction):
  ...


class RangeInstanceOnly(RangeRestriction):
  ...


class RangeInstanceExclusion(RangeRestriction):
  ...


VALUES_LISTERS = {  }
class ValuesLister(object):
  def __init__(self, Prop, domain, range_restrictions):
    self.Prop = ...
    self.domain = ...
    self.range_restrictions = ...
  
  def values_have_children(self):
    ...
  
  def available_values(self, subject):
    ...
  
  def range_match_classes(self, classes):
    ...
  


